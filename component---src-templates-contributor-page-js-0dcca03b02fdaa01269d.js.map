{"version":3,"sources":["webpack:///./src/templates/contributor-page.js","webpack:///./node_modules/core-js/modules/es6.string.fixed.js"],"names":["StyledLink","styled","Link","withConfig","displayName","componentId","PostContainer","div","Title","h3","Body","Date","Author","query","ContributorPage","_ref","data","author","authorYaml","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","title","_components_seo__WEBPACK_IMPORTED_MODULE_6__","keywords","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","avatar","childImageSharp","id","bio","allMarkdownRemark","edges","map","_ref2","node","frontmatter","to","fields","slug","key","date","excerpt","__webpack_require__","createHTML","this"],"mappings":"uNASMA,EAAaC,YAAOC,QAAVC,WAAA,CAAAC,YAAA,+BAAAC,YAAA,eAAGJ,CAAH,qFAQVK,EAAgBL,IAAOM,IAAVJ,WAAA,CAAAC,YAAA,kCAAAC,YAAA,eAAGJ,CAAH,4DAMbO,EAAQP,IAAOQ,GAAVN,WAAA,CAAAC,YAAA,0BAAAC,YAAA,eAAGJ,CAAH,wHAQLS,EAAOT,IAAOM,IAAVJ,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAGJ,CAAH,2EAMJU,EAAOV,IAAOM,IAAVJ,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAGJ,CAAH,2GAOJW,EAASX,IAAOM,IAAVJ,WAAA,CAAAC,YAAA,2BAAAC,YAAA,eAAGJ,CAAH,iMA0CCY,EAAK,aAoCHC,UA9DS,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACnBC,EAASD,EAAKE,WACpB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,eACZJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKD,MAAM,cAAcE,SAAU,CAAC,SAAU,cAAe,WAC7DN,EAAAC,EAAAC,cAACT,EAAD,KACEO,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAKO,MAAOV,EAAOW,OAAOC,gBAAgBF,QAC1CR,EAAAC,EAAAC,cAAA,UAAKJ,EAAOa,IACZX,EAAAC,EAAAC,cAAA,SAAIJ,EAAOc,MAEbZ,EAAAC,EAAAC,cAACf,EAAD,KACGU,EAAKgB,kBAAkBC,MAAMC,IAC5B,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACEnB,EAAOa,KAAOM,EAAKC,YAAYpB,OAAOa,IACpCX,EAAAC,EAAAC,cAACrB,EAAD,CAAYsC,GAAIF,EAAKG,OAAOC,KAAMC,IAAKL,EAAKG,OAAOC,MACjDrB,EAAAC,EAAAC,cAACb,EAAD,KAAQ4B,EAAKC,YAAYd,OACzBJ,EAAAC,EAAAC,cAACV,EAAD,WAAUyB,EAAKC,YAAYK,MAC3BvB,EAAAC,EAAAC,cAACX,EAAD,KAAO0B,EAAKO,iDC3E5BC,EAAQ,IAARA,CAAwB,iBAAAC,GACxB,kBACA,OAAAA,EAAAC,KAAA","file":"component---src-templates-contributor-page-js-0dcca03b02fdaa01269d.js","sourcesContent":["import React from 'react'\r\n\r\nimport { graphql, Link } from 'gatsby'\r\nimport styled from 'styled-components'\r\nimport Img from 'gatsby-image'\r\n\r\nimport Layout from '../components/layout'\r\nimport SEO from '../components/seo'\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: black;\r\n  max-width: 560px;\r\n  width: 80vw;\r\n  margin-bottom: 1rem;\r\n`\r\n\r\nconst PostContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst Title = styled.h3`\r\n  margin-top: 1.6rem;\r\n  margin-bottom: 0.4rem;\r\n  font-family: 'Roboto', sans-serif;\r\n  letter-spacing: -0.0075em;\r\n  font-size: 1.32rem;\r\n`\r\n\r\nconst Body = styled.div`\r\n  font-size: 0.85rem;\r\n  font-family: 'Roboto', sans-serif;\r\n  font-weight: normal;\r\n`\r\n\r\nconst Date = styled.div`\r\n  color: hsla(270, 6.8076334240000005%, 0%, 0.54);\r\n  font-size: 0.94rem;\r\n  margin-bottom: 0.6rem;\r\n  align-self: center;\r\n`\r\n\r\nconst Author = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-family: 'Roboto', sans-serif;\r\n  margin-bottom: 2rem;\r\n  & p {\r\n    font-size: 0.8rem;\r\n  }\r\n  & h2 {\r\n    font-size: 1.6rem;\r\n    margin-bottom: 1rem;\r\n    margin-top: 0.6rem;\r\n  }\r\n`\r\n\r\nconst ContributorPage = ({ data }) => {\r\n  const author = data.authorYaml\r\n  return (\r\n    <Layout title=\"Contributor\">\r\n      <SEO title=\"Contributor\" keywords={['gatsby', 'application', 'react']} />\r\n      <Author>\r\n        <Img fixed={author.avatar.childImageSharp.fixed} />\r\n        <h2>{author.id}</h2>\r\n        <p>{author.bio}</p>\r\n      </Author>\r\n      <PostContainer>\r\n        {data.allMarkdownRemark.edges.map(\r\n          ({ node }) =>\r\n            author.id === node.frontmatter.author.id && (\r\n              <StyledLink to={node.fields.slug} key={node.fields.slug}>\r\n                <Title>{node.frontmatter.title}</Title>\r\n                <Date>on {node.frontmatter.date}</Date>\r\n                <Body>{node.excerpt}</Body>\r\n              </StyledLink>\r\n            )\r\n        )}\r\n      </PostContainer>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date, fields___slug] }\r\n      filter: { fileAbsolutePath: { regex: \"/_posts/\" } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD MMMM, YYYY\")\r\n            author {\r\n              id\r\n            }\r\n          }\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n    authorYaml(fields: { slug: { eq: $slug } }) {\r\n      bio\r\n      id\r\n      avatar {\r\n        childImageSharp {\r\n          fixed(width: 60, height: 60) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default ContributorPage\r\n","'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n"],"sourceRoot":""}